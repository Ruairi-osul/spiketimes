import pandas as pd
from ..surrogates import shuffled_isi_spiketrains
from .conversion import list_to_df


def shuffled_isi_spiketrains_df(
    df: pd.core.frame.DataFrame, spiketimes_col: str = "spiketimes", n: int = 1
):
    """
    Given a dataframe containing a spiketimes from a neuron, returns a dataframe
    of n surrogate spiketrians by shuffling inter-spike-intervals

    params:
        df: dataframe containing the data
        spiketimes_col: label of column containing spiketimes
        n: number of surrogate spiketrains to replicate
    returns:
        a pandas dataframe of spiketimes indexed by spiketrain
    """
    # TODO test
    return list_to_df(shuffled_isi_spiketrains(df[spiketimes_col]))


def shuffled_isi_spiketrains_df_by(
    df: pd.core.frame.DataFrame,
    spiketimes_col: str = "spiketimes",
    by_col: str = "neuron_id",
    n: int = 2000,
):
    """
    Given a dataframe of spiketimes indexed grouped by another column,
    generates n surrogates from each group. Surrgates are generated by shuffling
    inter-spike-intervals.

    params:
        df: dataframe containing the data
        spiketimes_col: label of column containing spiketimes
        by_col: label of column indicating group (e.g. neuron_id, spiketrain_id or trial_id)
        n: number of surrogates to generate per group
    returns:
        dataframe containing surrogate spiketrain indexed by a 'surrogate_replicate' column
    """
    # TODO test
    return (
        df.groupby(by_col)
        .apply(
            lambda x: shuffled_isi_spiketrains_df(x, spiketimes_col=spiketimes_col, n=n)
        )
        .reset_index()
        .drop("level_1", axis=1)
        .rename(columns={"spiketrain": "spiketrain_replicate"})
    )
